package com.vaibhav.urlshortener;

import java.nio.charset.StandardCharsets;

import org.apache.commons.validator.routines.UrlValidator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.common.hash.Hashing;

@RequestMapping("rest/url") // web Library
@RestController
public class UrlShortenerResource {

	@Autowired
	StringRedisTemplate redisTemplate; // Redis Library

	@GetMapping("/{id}")
	public String getUrl(@PathVariable String id) {

		String url = redisTemplate.opsForValue().get(id);
		System.out.println("URL Received : " + url);

		if (url == null) {
			throw new RuntimeException("There is no shorter url for : " + id);
		}
		return url;
	}

	@PostMapping
	public String create(@RequestBody String url) {
		UrlValidator validator = new UrlValidator(new String[] { "http", "https" }); // commons
																						// validator
																						// Library
		if (validator.isValid(url)) {
			String id = Hashing.murmur3_32().hashString(url, StandardCharsets.UTF_8).toString(); // Guava
																									// Library
			System.out.println("Url Id generated by murmur hashing : " + id);

			redisTemplate.opsForValue().set(id, url); // key, value
			return id;
		}
		throw new RuntimeException("URL Invalid :" + url);
	}
}
